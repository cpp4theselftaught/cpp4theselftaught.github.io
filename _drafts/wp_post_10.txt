ID: 15
post_author: 1
post_date: "2012-08-14 18:07:43"
post_date_gmt: "2012-08-14 22:07:43"
post_content: "This is one of those things that I find myself writing fairly often: it's part of LL(k) parsers (which I'll talk about at some point on this site) and a similar pattern (a circular queue) is often found in inter-thread communication.nnA circular buffer is a fixed-size buffer into which you can put pretty much anything (we'll look at the requirements for something you can put into this one in a moment) which has a few advantages:n<ol>n <li><strong>Being of fixed size, all the data is (or can be) pre-allocated</strong>. This is especially important in embedded systems, where run-time allocation is often seen as a no-no</li>n <li><strong>Being a class template, you can re-use it in many different contexts</strong>. This particular class template takes three parameters: the type of "payload", the number of entries in the circular buffer and the alignment type. In practice, this is really all you need in a class template such as this one.</li>nn</ol>"
post_title: "A generic circular buffer"
post_excerpt: ""
post_status: "inherit"
comment_status: "open"
ping_status: "open"
post_password: ""
post_name: "12-revision-3"
to_ping: ""
pinged: ""
post_modified: "2012-08-14 18:07:43"
post_modified_gmt: "2012-08-14 22:07:43"
post_content_filtered: ""
post_parent: 12
guid: "http://cpp4theselftaught.com/2012/08/12-revision-3/"
menu_order: 0
post_type: "revision"
post_mime_type: ""
comment_count: 0
