ID: 37
post_author: 1
post_date: "2011-09-25 17:01:51"
post_date_gmt: "2011-09-25 21:01:51"
post_content: "n<div class="topsy_widget_data topsy_theme_blue" style="float: right;margin-left: 0.75em; background: url(data:,%7B%20%22url%22%3A%20%22http%253A%252F%252Frlc.vlinder.ca%252Fblog%252F2011%252F09%252Fchausette-starting-to-proxy%252F%22%2C%20%22shorturl%22%3A%20%22http%3A%2F%2Fbit.ly%2FoaiKH6%22%2C%20%22style%22%3A%20%22big%22%2C%20%22title%22%3A%20%22Chausette%3A%20Starting%20to%20proxy%22%20%7D);"></div>n<p> <audio id="wp_mep_2" src="http://vlinder.ca/podcasts/34-proxying.mp3" controls="controls" preload="none" >n n n n n n n n <object width="400" height="30" type="application/x-shockwave-flash" data="http://rlc.vlinder.ca/wp-content/plugins/media-element-html5-video-and-audio-player/mediaelement/flashmediaelement.swf">n <param name="movie" value="http://rlc.vlinder.ca/wp-content/plugins/media-element-html5-video-and-audio-player/mediaelement/flashmediaelement.swf" />n <param name="flashvars" value="controls=true&amp;file=http://vlinder.ca/podcasts/34-proxying.mp3" /> n </object> n </audio>n<script type="text/javascript">njQuery(document).ready(function($) {n $('#wp_mep_2').mediaelementplayer({n m:1n n ,features: ['playpause','current','progress','duration','volume','tracks','fullscreen']n ,audioWidth:400,audioHeight:30n });n});n</script>nIn <a href="http://rlc.vlinder.ca/blog/2011/08/chausette-starting-to-echo/" title="Chausette: Starting to echo" >the previous installment</a>, we started to echo the data we received back to where it came from. That&#8217;s all fine and dandy, but it isn&#8217;t really all that interesting. In this installment, we will set up a pair of connections and proxy between the two &#8211; which is the core of what a proxy server should do.<br />n<span id="more-1677"></span><br />nOne of the first things we will need to do is to build upon what we did in the <a href="http://rlc.vlinder.ca/blog/2011/08/chausette-starting-to-echo/" title="Chausette: Starting to echo" >previous installment</a> and add another attribute to our sockets. As you can see in the following snippet, that is really easy to do: first we rename the attribute we already have</p>nn<div class="wp_syntax"><table><tr><td class="code"><pre class="diff" style="font-family:monospace;">diff --git a/bin/Episode28/Application.cpp b/bin/Episode28/Application.cppnindex eefdc44..bc67f24 <span style="">100644</span>n<span style="color: #888822;">--- a/bin/Episode28/Application.cpp</span>n<span style="color: #888822;">+++ b/bin/Episode28/Application.cpp</span>n<span style="color: #440088;">@@ -<span style="">11</span>,<span style="">7</span> +<span style="">11</span>,<span style="">7</span> @@ using namespace boost;</span>n&nbsp;n Application::Application<span style="">&#40;</span><span style="">&#41;</span>n : server_<span style="">&#40;</span><span style="">0</span><span style="">&#41;</span>n<span style="color: #991111;">-, socket_attribute_id_<span style="">&#40;</span>Socket::alloc<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span></span>n<span style="color: #00b000;">+, data_to_send_attribute_id_<span style="">&#40;</span>Socket::alloc<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span></span>n <span style="">&#123;</span>n WSADATA wsadata;n WSAStartup<span style="">&#40;</span>MAKEWORD<span style="">&#40;</span><span style="">2</span>, <span style="">2</span><span style="">&#41;</span>, &amp;wsadata<span style="">&#41;</span>;n<span style="color: #440088;">@@ -66,14 +66,14 @@ void Application::run<span style="">&#40;</span>const Application::Arguments &amp;arguments<span style="">&#41;</span></span>n <span style="">&#123;</span>n bool needed_to_initialize<span style="">&#40;</span>false<span style="">&#41;</span>;n std::vector&lt; char &gt;::size_type offset<span style="">&#40;</span><span style="">0</span><span style="">&#41;</span>;n<span style="color: #991111;">- if <span style="">&#40;</span>socket.get<span style="">&#40;</span>socket_attribute_id_<span style="">&#41;</span>.empty<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span></span>n<span style="color: #00b000;">+ if <span style="">&#40;</span>socket.get<span style="">&#40;</span>data_to_send_attribute_id_<span style="">&#41;</span>.empty<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span></span>n <span style="">&#123;</span>n<span style="color: #991111;">- socket.get<span style="">&#40;</span>socket_attribute_id_<span style="">&#41;</span> = vector&lt; char &gt;<span style="">&#40;</span><span style="">1024</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ socket.get<span style="">&#40;</span>data_to_send_attribute_id_<span style="">&#41;</span> = vector&lt; char &gt;<span style="">&#40;</span><span style="">1024</span><span style="">&#41;</span>;</span>n needed_to_initialize = true;n <span style="">&#125;</span>n elsen <span style="">&#123;</span> /bin /boot /cdrom /dev /etc /home /initrd.img /initrd.img.old /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old already have a buffer */ <span style="">&#125;</span>n<span style="color: #991111;">- vector&lt; char &gt; &amp;buffer = any_cast&lt; vector&lt; char &gt;&amp; &gt;<span style="">&#40;</span>socket.get<span style="">&#40;</span>socket_attribute_id_<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ vector&lt; char &gt; &amp;buffer = any_cast&lt; vector&lt; char &gt;&amp; &gt;<span style="">&#40;</span>socket.get<span style="">&#40;</span>data_to_send_attribute_id_<span style="">&#41;</span><span style="">&#41;</span>;</span>n if <span style="">&#40;</span>!needed_to_initialize &amp;&amp; buffer.empty<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>n <span style="">&#123;</span>n buffer.resize<span style="">&#40;</span>buffer.capacity<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>;n<span style="color: #440088;">@@ -99,11 +99,11 @@ void Application::run<span style="">&#40;</span>const Application::Arguments &amp;arguments<span style="">&#41;</span></span>n&nbsp;n /*virtual */void Application::onWriteReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>n <span style="">&#123;</span>n<span style="color: #991111;">- if <span style="">&#40;</span>socket.get<span style="">&#40;</span>socket_attribute_id_<span style="">&#41;</span>.empty<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span></span>n<span style="color: #00b000;">+ if <span style="">&#40;</span>socket.get<span style="">&#40;</span>data_to_send_attribute_id_<span style="">&#41;</span>.empty<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span></span>n <span style="">&#123;</span> /bin /boot /cdrom /dev /etc /home /initrd.img /initrd.img.old /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old no-op */ <span style="">&#125;</span>n elsen <span style="">&#123;</span>n<span style="color: #991111;">- vector&lt; char &gt; &amp;buffer = any_cast&lt; vector&lt; char &gt;&amp; &gt;<span style="">&#40;</span>socket.get<span style="">&#40;</span>socket_attribute_id_<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ vector&lt; char &gt; &amp;buffer = any_cast&lt; vector&lt; char &gt;&amp; &gt;<span style="">&#40;</span>socket.get<span style="">&#40;</span>data_to_send_attribute_id_<span style="">&#41;</span><span style="">&#41;</span>;</span>n if <span style="">&#40;</span>buffer.empty<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>n <span style="">&#123;</span> /bin /boot /cdrom /dev /etc /home /initrd.img /initrd.img.old /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old no-op */ <span style="">&#125;</span>n else</pre></td></tr></table></div>nn<p>then we add the new attribute, which will hold the socket address of the &#8220;remote&#8221; or &#8220;paired&#8221; socket.</p>nn<div class="wp_syntax"><table><tr><td class="code"><pre class="diff" style="font-family:monospace;">diff --git a/bin/Episode28/Application.cpp b/bin/Episode28/Application.cppnindex bc67f24..3f3de16 <span style="">100644</span>n<span style="color: #888822;">--- a/bin/Episode28/Application.cpp</span>n<span style="color: #888822;">+++ b/bin/Episode28/Application.cpp</span>n<span style="color: #440088;">@@ -59,7 +59,8 @@ void Application::run<span style="">&#40;</span>const Application::Arguments &amp;arguments<span style="">&#41;</span></span>n&nbsp;n /*virtual */void Application::onNewConnection<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>n <span style="">&#123;</span>n<span style="color: #991111;">- server_-&gt;accept<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ Socket &amp;new_socket<span style="">&#40;</span>server_-&gt;accept<span style="">&#40;</span>socket<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ remote_address_to_socket_.insert<span style="">&#40;</span>RemoteAddressToSocket::value_type<span style="">&#40;</span>new_socket.remote_address_, &amp;new_socket<span style="">&#41;</span><span style="">&#41;</span>;</span>n <span style="">&#125;</span>n&nbsp;n /*virtual */void Application::onDataReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>n<span style="color: #440088;">@@ -118,3 +119,11 @@ void Application::run<span style="">&#40;</span>const Application::Arguments &amp;arguments<span style="">&#41;</span></span>n /*virtual */void Application::onExceptionalDataReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>n <span style="">&#123;</span>n <span style="">&#125;</span>n<span style="color: #00b000;">+</span>n<span style="color: #00b000;">+/*virtual */void Application::onCloseSocket<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span></span>n<span style="color: #00b000;">+<span style="">&#123;</span></span>n<span style="color: #00b000;">+ RemoteAddressToSocket::iterator where<span style="">&#40;</span>remote_address_to_socket_.find<span style="">&#40;</span>socket.remote_address_<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ assert<span style="">&#40;</span>where != remote_address_to_socket_.end<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ assert<span style="">&#40;</span>where-&gt;second == &amp;socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ remote_address_to_socket_.erase<span style="">&#40;</span>where<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+<span style="">&#125;</span></span>ndiff --git a/bin/Episode28/Application.h b/bin/Episode28/Application.hnindex 30b9400..e151853 <span style="">100644</span>n<span style="color: #888822;">--- a/bin/Episode28/Application.h</span>n<span style="color: #888822;">+++ b/bin/Episode28/Application.h</span>n<span style="color: #440088;">@@ -2,7 +2,9 @@</span>n #define chausette_episode28_application_hn&nbsp;n #include &lt;string&gt;n<span style="color: #00b000;">+#include &lt;map&gt;</span>n #include &lt;vector&gt;n<span style="color: #00b000;">+#include &lt;winsock2.h&gt;</span>n #include &quot;Observer.h&quot;n&nbsp;n class Server;n<span style="color: #440088;">@@ -17,6 +19,15 @@ public :</span>n void run<span style="">&#40;</span>const Arguments &amp;arguments<span style="">&#41;</span>;n&nbsp;n private :n<span style="color: #00b000;">+ struct SockAddrStorageCompare</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ bool operator<span style="">&#40;</span><span style="">&#41;</span><span style="">&#40;</span>const sockaddr_storage &amp;lhs, const sockaddr_storage &amp;rhs<span style="">&#41;</span> const</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ return memcmp<span style="">&#40;</span>&amp;lhs, &amp;rhs, sizeof<span style="">&#40;</span>lhs<span style="">&#41;</span><span style="">&#41;</span> &lt; <span style="">0</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ <span style="">&#125;</span>;</span>n<span style="color: #00b000;">+ typedef std::map&lt; sockaddr_storage, Socket*, SockAddrStorageCompare &gt; RemoteAddressToSocket;</span>n<span style="color: #00b000;">+</span>n Application<span style="">&#40;</span>const Application&amp;<span style="">&#41;</span>;n Application&amp; operator=<span style="">&#40;</span>const Application&amp;<span style="">&#41;</span>;n&nbsp;n<span style="color: #440088;">@@ -24,10 +35,12 @@ private :</span>n virtual void onDataReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;n virtual void onWriteReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;n virtual void onExceptionalDataReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;n<span style="color: #00b000;">+ virtual void onCloseSocket<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;</span>n&nbsp;n bool done_;n Server *server_;n<span style="color: #991111;">- unsigned int socket_attribute_id_;</span>n<span style="color: #00b000;">+ unsigned int data_to_send_attribute_id_;</span>n<span style="color: #00b000;">+ RemoteAddressToSocket remote_address_to_socket_;</span>n <span style="">&#125;</span>;n&nbsp;n #endifndiff --git a/bin/Episode28/Observer.h b/bin/Episode28/Observer.hnindex a<span style="color: #440088;">8d6125</span>..f<span style="color: #440088;">0d4</span>c4a <span style="">100644</span>n<span style="color: #888822;">--- a/bin/Episode28/Observer.h</span>n<span style="color: #888822;">+++ b/bin/Episode28/Observer.h</span>n<span style="color: #440088;">@@ -12,6 +12,7 @@ public :</span>n virtual void onDataReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span> = <span style="">0</span>;n virtual void onWriteReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span> = <span style="">0</span>;n virtual void onExceptionalDataReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span> = <span style="">0</span>;n<span style="color: #00b000;">+ virtual void onCloseSocket<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span> = <span style="">0</span>;</span>n&nbsp;n private :n Observer<span style="">&#40;</span>const Observer&amp;<span style="">&#41;</span>;ndiff --git a/bin/Episode28/Server.cpp b/bin/Episode28/Server.cppnindex 7aa52e8..5871b18 <span style="">100644</span>n<span style="color: #888822;">--- a/bin/Episode28/Server.cpp</span>n<span style="color: #888822;">+++ b/bin/Episode28/Server.cpp</span>n<span style="color: #440088;">@@ -174,16 +174,18 @@ void Server::detach<span style="">&#40;</span>Observer *observer<span style="">&#41;</span></span>n <span style="">&#123;</span> /bin /boot /cdrom /dev /etc /home /initrd.img /initrd.img.old /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old not found, not a problem */ <span style="">&#125;</span>n <span style="">&#125;</span>n&nbsp;n<span style="color: #991111;">-void Server::accept<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span></span>n<span style="color: #00b000;">+Socket&amp; Server::accept<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span></span>n <span style="">&#123;</span>n Socket new_socket<span style="">&#40;</span>accept_<span style="">&#40;</span>socket<span style="">&#41;</span><span style="">&#41;</span>;n sockets_.push_back<span style="">&#40;</span>new_socket<span style="">&#41;</span>;n<span style="color: #00b000;">+ return sockets_.back<span style="">&#40;</span><span style="">&#41;</span>;</span>n <span style="">&#125;</span>n&nbsp;n void Server::reject<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>n <span style="">&#123;</span>n Socket new_socket<span style="">&#40;</span>accept_<span style="">&#40;</span>socket<span style="">&#41;</span><span style="">&#41;</span>;n closesocket<span style="">&#40;</span>new_socket.fd_<span style="">&#41;</span>;n<span style="color: #00b000;">+ // don't need to notify in this case - the observer has never seen the new socket</span>n <span style="">&#125;</span>n&nbsp;n void Server::read<span style="">&#40;</span>Socket &amp;socket, char *buffer, unsigned int *buffer_size<span style="">&#41;</span>n<span style="color: #440088;">@@ -194,6 +196,10 @@ void Server::read<span style="">&#40;</span>Socket &amp;socket, char *buffer, unsigned int *buffer_size<span style="">&#41;</span></span>n if <span style="">&#40;</span>recv_result == <span style="">0</span><span style="">&#41;</span> // EOFn <span style="">&#123;</span>n closesocket<span style="">&#40;</span>socket.fd_<span style="">&#41;</span>;n<span style="color: #00b000;">+ for <span style="">&#40;</span>Observers::iterator observer<span style="">&#40;</span>observers_.begin<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>; observer != observers_.end<span style="">&#40;</span><span style="">&#41;</span>; ++observer<span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ <span style="">&#40;</span>*observer<span style="">&#41;</span>-&gt;onCloseSocket<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n socket.fd_ = -<span style="">1</span>;n <span style="">&#125;</span>n else if <span style="">&#40;</span>recv_result &lt; <span style="">0</span><span style="">&#41;</span>n<span style="color: #440088;">@@ -235,8 +241,11 @@ void Server::write<span style="">&#40;</span>Socket &amp;socket, const char *buffer, unsigned int *buffer_size</span>n&nbsp;n Socket Server::accept_<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>n <span style="">&#123;</span>n<span style="color: #991111;">- Socket new_socket<span style="">&#40;</span>::accept<span style="">&#40;</span>socket.fd_, <span style="">0</span>, <span style="">0</span><span style="">&#41;</span>, socket.fd_<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ sockaddr_storage remote_address;</span>n<span style="color: #00b000;">+ int remote_address_size<span style="">&#40;</span>sizeof<span style="">&#40;</span>remote_address<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ Socket new_socket<span style="">&#40;</span>::accept<span style="">&#40;</span>socket.fd_, <span style="">&#40;</span>sockaddr*<span style="">&#41;</span>&amp;remote_address, &amp;remote_address_size<span style="">&#41;</span>, socket.fd_<span style="">&#41;</span>;</span>n socket.read_avail_ = false;n<span style="color: #00b000;">+ new_socket.remote_address_ = remote_address;</span>n return new_socket;n <span style="">&#125;</span>n&nbsp;ndiff --git a/bin/Episode28/Server.h b/bin/Episode28/Server.hnindex <span style="color: #440088;">361a3</span>d3..f<span style="color: #440088;">8d1131</span> <span style="">100644</span>n<span style="color: #888822;">--- a/bin/Episode28/Server.h</span>n<span style="color: #888822;">+++ b/bin/Episode28/Server.h</span>n<span style="color: #440088;">@@ -18,7 +18,7 @@ public :</span>n void attach<span style="">&#40;</span>Observer *observer<span style="">&#41;</span>;n void detach<span style="">&#40;</span>Observer *observer<span style="">&#41;</span>;n&nbsp;n<span style="color: #991111;">- void accept<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ Socket&amp; accept<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;</span>n void reject<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;n&nbsp;n void read<span style="">&#40;</span>Socket &amp;socket, char *buffer, unsigned int *buffer_size<span style="">&#41;</span>;ndiff --git a/bin/Episode28/Socket.h b/bin/Episode28/Socket.hnindex 26082ae..1fe451d <span style="">100644</span>n<span style="color: #888822;">--- a/bin/Episode28/Socket.h</span>n<span style="color: #888822;">+++ b/bin/Episode28/Socket.h</span>n<span style="color: #440088;">@@ -11,16 +11,19 @@ struct Socket : private Vlinder::Chausette::Core::Attributes</span>n , read_avail_<span style="">&#40;</span>false<span style="">&#41;</span>n , write_avail_<span style="">&#40;</span>false<span style="">&#41;</span>n , exc_avail_<span style="">&#40;</span>false<span style="">&#41;</span>n<span style="color: #991111;">- <span style="">&#123;</span> /bin /boot /cdrom /dev /etc /home /initrd.img /initrd.img.old /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old no-op */ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ memset<span style="">&#40;</span>&amp;remote_address_, <span style="">0</span>, sizeof<span style="">&#40;</span>remote_address_<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n&nbsp;n<span style="color: #991111;">- using Vlinder::Chausette::Core::Attributes::alloc;</span>n<span style="color: #991111;">- using Vlinder::Chausette::Core::Attributes::get;</span>n<span style="color: #00b000;">+ using Vlinder::Chausette::Core::Attributes::alloc;</span>n<span style="color: #00b000;">+ using Vlinder::Chausette::Core::Attributes::get;</span>n&nbsp;n int fd_;n int parent_fd_;n bool read_avail_;n bool write_avail_;n bool exc_avail_;n<span style="color: #00b000;">+ sockaddr_storage remote_address_;</span>n <span style="">&#125;</span>;n&nbsp;n #endif</pre></td></tr></table></div>nn<p>Note that we now need to know when a socket is closed, to we can do the appropriate clean-up. We also need to know the remote addresses of incoming connections, which we store in the new <code>remote_address_</code> member and <code>accept</code> now returns a reference to the accepted socket, so we can keep that reference and associate it with another socket later on. The following snippet of code will finish the deal:</p>nn<div class="wp_syntax"><table><tr><td class="code"><pre class="diff" style="font-family:monospace;">diff --git a/bin/Episode28/Application.cpp b/bin/Episode28/Application.cppnindex 3f3de16..70ba6e4 <span style="">100644</span>n<span style="color: #888822;">--- a/bin/Episode28/Application.cpp</span>n<span style="color: #888822;">+++ b/bin/Episode28/Application.cpp</span>n<span style="color: #440088;">@@ -<span style="">12</span>,<span style="">6</span> +<span style="">12</span>,<span style="">8</span> @@ using namespace boost;</span>n Application::Application<span style="">&#40;</span><span style="">&#41;</span>n : server_<span style="">&#40;</span><span style="">0</span><span style="">&#41;</span>n , data_to_send_attribute_id_<span style="">&#40;</span>Socket::alloc<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>n<span style="color: #00b000;">+, target_address_attribute_id_<span style="">&#40;</span>Socket::alloc<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span></span>n<span style="color: #00b000;">+, un_paired_socket_<span style="">&#40;</span>0<span style="">&#41;</span></span>n <span style="">&#123;</span>n WSADATA wsadata;n WSAStartup<span style="">&#40;</span>MAKEWORD<span style="">&#40;</span><span style="">2</span>, <span style="">2</span><span style="">&#41;</span>, &amp;wsadata<span style="">&#41;</span>;n<span style="color: #440088;">@@ -61,20 +63,29 @@ void Application::run<span style="">&#40;</span>const Application::Arguments &amp;arguments<span style="">&#41;</span></span>n <span style="">&#123;</span>n Socket &amp;new_socket<span style="">&#40;</span>server_-&gt;accept<span style="">&#40;</span>socket<span style="">&#41;</span><span style="">&#41;</span>;n remote_address_to_socket_.insert<span style="">&#40;</span>RemoteAddressToSocket::value_type<span style="">&#40;</span>new_socket.remote_address_, &amp;new_socket<span style="">&#41;</span><span style="">&#41;</span>;n<span style="color: #00b000;">+ pairSocket<span style="">&#40;</span>new_socket<span style="">&#41;</span>;</span>n <span style="">&#125;</span>n&nbsp;n /*virtual */void Application::onDataReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>n <span style="">&#123;</span>n<span style="color: #00b000;">+ vector&lt; char &gt; temp; // in case the socket is un-paired</span>n bool needed_to_initialize<span style="">&#40;</span>false<span style="">&#41;</span>;n<span style="color: #991111;">- std::vector&lt; char &gt;::size_type offset<span style="">&#40;</span><span style="">0</span><span style="">&#41;</span>;</span>n<span style="color: #991111;">- if <span style="">&#40;</span>socket.get<span style="">&#40;</span>data_to_send_attribute_id_<span style="">&#41;</span>.empty<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span></span>n<span style="color: #00b000;">+ vector&lt; char &gt;::size_type offset<span style="">&#40;</span><span style="">0</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ Socket *partner<span style="">&#40;</span><span style="">&#40;</span>&amp;socket == un_paired_socket_<span style="">&#41;</span> ? <span style="">0</span> : remote_address_to_socket_<span style="">&#91;</span>any_cast&lt; sockaddr_storage &gt;<span style="">&#40;</span>socket.get<span style="">&#40;</span>target_address_attribute_id_<span style="">&#41;</span><span style="">&#41;</span><span style="">&#93;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ if <span style="">&#40;</span>partner &amp;&amp;</span>n<span style="color: #00b000;">+ partner-&gt;get<span style="">&#40;</span>data_to_send_attribute_id_<span style="">&#41;</span>.empty<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span></span>n <span style="">&#123;</span>n<span style="color: #991111;">- socket.get<span style="">&#40;</span>data_to_send_attribute_id_<span style="">&#41;</span> = vector&lt; char &gt;<span style="">&#40;</span><span style="">1024</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ partner-&gt;get<span style="">&#40;</span>data_to_send_attribute_id_<span style="">&#41;</span> = vector&lt; char &gt;<span style="">&#40;</span><span style="">1024</span><span style="">&#41;</span>;</span>n needed_to_initialize = true;n <span style="">&#125;</span>n<span style="color: #991111;">- else</span>n<span style="color: #00b000;">+ else if <span style="">&#40;</span>partner<span style="">&#41;</span></span>n <span style="">&#123;</span> /bin /boot /cdrom /dev /etc /home /initrd.img /initrd.img.old /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old already have a buffer */ <span style="">&#125;</span>n<span style="color: #991111;">- vector&lt; char &gt; &amp;buffer = any_cast&lt; vector&lt; char &gt;&amp; &gt;<span style="">&#40;</span>socket.get<span style="">&#40;</span>data_to_send_attribute_id_<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ else</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ temp.resize<span style="">&#40;</span><span style="">1024</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ needed_to_initialize = true;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ vector&lt; char &gt; &amp;buffer = partner ? any_cast&lt; vector&lt; char &gt;&amp; &gt;<span style="">&#40;</span>partner-&gt;get<span style="">&#40;</span>data_to_send_attribute_id_<span style="">&#41;</span><span style="">&#41;</span> : temp;</span>n if <span style="">&#40;</span>!needed_to_initialize &amp;&amp; buffer.empty<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>n <span style="">&#123;</span>n buffer.resize<span style="">&#40;</span>buffer.capacity<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>;n<span style="color: #440088;">@@ -82,20 +93,37 @@ void Application::run<span style="">&#40;</span>const Application::Arguments &amp;arguments<span style="">&#41;</span></span>n else if <span style="">&#40;</span>!needed_to_initialize<span style="">&#41;</span>n <span style="">&#123;</span>n offset = buffer.size<span style="">&#40;</span><span style="">&#41;</span>;n<span style="color: #991111;">- buffer.resize<span style="">&#40;</span>offset + <span style="">1024</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ if <span style="">&#40;</span>buffer.capacity<span style="">&#40;</span><span style="">&#41;</span> &lt;= offset + 1024<span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ buffer.resize<span style="">&#40;</span>offset + <span style="">1024</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ else</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ buffer.resize<span style="">&#40;</span>buffer.capacity<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n <span style="">&#125;</span>n elsen <span style="">&#123;</span> /bin /boot /cdrom /dev /etc /home /initrd.img /initrd.img.old /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old needed to initialize - so no need to account for data already in the buffer */ <span style="">&#125;</span>n unsigned int data_read<span style="">&#40;</span>buffer.size<span style="">&#40;</span><span style="">&#41;</span> - offset<span style="">&#41;</span>;n char *read_ptr<span style="">&#40;</span>&amp;buffer<span style="">&#91;</span><span style="">0</span><span style="">&#93;</span><span style="">&#41;</span>;n read_ptr += offset;n<span style="color: #991111;">- server_-&gt;read<span style="">&#40;</span>socket, read_ptr, &amp;data_read<span style="">&#41;</span>;</span>n<span style="color: #991111;">- buffer.resize<span style="">&#40;</span>offset + <span style="">&#40;</span>data_read 2017-10-14-new-website.md 2017-10-14-new-website.md~ split.sh split.sh~ wp_post_10.txt wp_post_11.txt wp_post_12.txt wp_post_13.txt wp_post_14.txt wp_post_15.txt wp_post_16.txt wp_post_17.txt wp_post_18.txt wp_post_19.txt wp_post_1.yml wp_post_20.txt wp_post_21.txt wp_post_22.txt wp_post_23.txt wp_post_24.txt wp_post_25.txt wp_post_26.txt wp_post_27.txt wp_post_28.txt wp_post_29.txt wp_post_2.txt wp_post_3.txt wp_post_4.txt wp_post_5.txt wp_post_6.txt wp_post_7.txt wp_post_8.txt wp_post_9.txt wp_posts.yml <span style="">4</span><span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #991111;">- std::copy<span style="">&#40;</span>buffer.begin<span style="">&#40;</span><span style="">&#41;</span> + offset, buffer.begin<span style="">&#40;</span><span style="">&#41;</span> + offset + data_read, buffer.begin<span style="">&#40;</span><span style="">&#41;</span> + offset + data_read<span style="">&#41;</span>;</span>n<span style="color: #991111;">- std::copy<span style="">&#40;</span>buffer.begin<span style="">&#40;</span><span style="">&#41;</span> + offset, buffer.begin<span style="">&#40;</span><span style="">&#41;</span> + offset + <span style="">&#40;</span>data_read 2017-10-14-new-website.md 2017-10-14-new-website.md~ split.sh split.sh~ wp_post_10.txt wp_post_11.txt wp_post_12.txt wp_post_13.txt wp_post_14.txt wp_post_15.txt wp_post_16.txt wp_post_17.txt wp_post_18.txt wp_post_19.txt wp_post_1.yml wp_post_20.txt wp_post_21.txt wp_post_22.txt wp_post_23.txt wp_post_24.txt wp_post_25.txt wp_post_26.txt wp_post_27.txt wp_post_28.txt wp_post_29.txt wp_post_2.txt wp_post_3.txt wp_post_4.txt wp_post_5.txt wp_post_6.txt wp_post_7.txt wp_post_8.txt wp_post_9.txt wp_posts.yml <span style="">2</span><span style="">&#41;</span>, buffer.begin<span style="">&#40;</span><span style="">&#41;</span> + offset + <span style="">&#40;</span>data_read 2017-10-14-new-website.md 2017-10-14-new-website.md~ split.sh split.sh~ wp_post_10.txt wp_post_11.txt wp_post_12.txt wp_post_13.txt wp_post_14.txt wp_post_15.txt wp_post_16.txt wp_post_17.txt wp_post_18.txt wp_post_19.txt wp_post_1.yml wp_post_20.txt wp_post_21.txt wp_post_22.txt wp_post_23.txt wp_post_24.txt wp_post_25.txt wp_post_26.txt wp_post_27.txt wp_post_28.txt wp_post_29.txt wp_post_2.txt wp_post_3.txt wp_post_4.txt wp_post_5.txt wp_post_6.txt wp_post_7.txt wp_post_8.txt wp_post_9.txt wp_posts.yml <span style="">2</span><span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #991111;">- unsigned int data_written<span style="">&#40;</span>buffer.size<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #991111;">- server_-&gt;write<span style="">&#40;</span>socket, &amp;buffer<span style="">&#91;</span><span style="">0</span><span style="">&#93;</span>, &amp;data_written<span style="">&#41;</span>;</span>n<span style="color: #991111;">- buffer.erase<span style="">&#40;</span>buffer.begin<span style="">&#40;</span><span style="">&#41;</span>, buffer.begin<span style="">&#40;</span><span style="">&#41;</span> + data_written<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ try</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ server_-&gt;read<span style="">&#40;</span>socket, read_ptr, &amp;data_read<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ buffer.resize<span style="">&#40;</span>offset + data_read<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ unsigned int data_written<span style="">&#40;</span>buffer.size<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ if <span style="">&#40;</span>partner<span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ server_-&gt;write<span style="">&#40;</span>*partner, &amp;buffer<span style="">&#91;</span><span style="">0</span><span style="">&#93;</span>, &amp;data_written<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ else</span>n<span style="color: #00b000;">+ <span style="">&#123;</span> /bin /boot /cdrom /dev /etc /home /initrd.img /initrd.img.old /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old no partner to send data to */ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ buffer.erase<span style="">&#40;</span>buffer.begin<span style="">&#40;</span><span style="">&#41;</span>, buffer.begin<span style="">&#40;</span><span style="">&#41;</span> + data_written<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ catch <span style="">&#40;</span>const Server::NetworkError&amp;<span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ // ignore this for now: the socket will have been dealt with but this is no reason for us to crash.</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n <span style="">&#125;</span>n&nbsp;n /*virtual */void Application::onWriteReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>n<span style="color: #440088;">@@ -126,4 +154,36 @@ void Application::run<span style="">&#40;</span>const Application::Arguments &amp;arguments<span style="">&#41;</span></span>n assert<span style="">&#40;</span>where != remote_address_to_socket_.end<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>;n assert<span style="">&#40;</span>where-&gt;second == &amp;socket<span style="">&#41;</span>;n remote_address_to_socket_.erase<span style="">&#40;</span>where<span style="">&#41;</span>;n<span style="color: #00b000;">+ unpairSocket<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+<span style="">&#125;</span></span>n<span style="color: #00b000;">+</span>n<span style="color: #00b000;">+void Application::pairSocket<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span></span>n<span style="color: #00b000;">+<span style="">&#123;</span></span>n<span style="color: #00b000;">+ if <span style="">&#40;</span>un_paired_socket_<span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ un_paired_socket_-&gt;get<span style="">&#40;</span>target_address_attribute_id_<span style="">&#41;</span> = socket.remote_address_;</span>n<span style="color: #00b000;">+ socket.get<span style="">&#40;</span>target_address_attribute_id_<span style="">&#41;</span> = un_paired_socket_-&gt;remote_address_;</span>n<span style="color: #00b000;">+ un_paired_socket_ = <span style="">0</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ else</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ un_paired_socket_ = &amp;socket;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+<span style="">&#125;</span></span>n<span style="color: #00b000;">+</span>n<span style="color: #00b000;">+void Application::unpairSocket<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span></span>n<span style="color: #00b000;">+<span style="">&#123;</span></span>n<span style="color: #00b000;">+ // find the socket this one was paired to</span>n<span style="color: #00b000;">+ if <span style="">&#40;</span>un_paired_socket_ == &amp;socket<span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ un_paired_socket_ = <span style="">0</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ else</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ assert<span style="">&#40;</span>!socket.get<span style="">&#40;</span>target_address_attribute_id_<span style="">&#41;</span>.empty<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ sockaddr_storage target_address<span style="">&#40;</span>any_cast&lt; sockaddr_storage &gt;<span style="">&#40;</span>socket.get<span style="">&#40;</span>target_address_attribute_id_<span style="">&#41;</span><span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ Socket *other_socket<span style="">&#40;</span>remote_address_to_socket_<span style="">&#91;</span>target_address<span style="">&#93;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ other_socket-&gt;get<span style="">&#40;</span>target_address_attribute_id_<span style="">&#41;</span> = any<span style="">&#40;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ pairSocket<span style="">&#40;</span>*other_socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n <span style="">&#125;</span>ndiff --git a/bin/Episode28/Application.h b/bin/Episode28/Application.hnindex e151853..4f478da <span style="">100644</span>n<span style="color: #888822;">--- a/bin/Episode28/Application.h</span>n<span style="color: #888822;">+++ b/bin/Episode28/Application.h</span>n<span style="color: #440088;">@@ -36,11 +36,15 @@ private :</span>n virtual void onWriteReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;n virtual void onExceptionalDataReady<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;n virtual void onCloseSocket<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;n<span style="color: #00b000;">+ void pairSocket<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ void unpairSocket<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;</span>n&nbsp;n bool done_;n Server *server_;n unsigned int data_to_send_attribute_id_;n<span style="color: #00b000;">+ unsigned int target_address_attribute_id_;</span>n RemoteAddressToSocket remote_address_to_socket_;n<span style="color: #00b000;">+ Socket *un_paired_socket_;</span>n <span style="">&#125;</span>;n&nbsp;n #endifndiff --git a/bin/Episode28/Server.cpp b/bin/Episode28/Server.cppnindex 5871b18..edc<span style="color: #440088;">60d9</span> <span style="">100644</span>n<span style="color: #888822;">--- a/bin/Episode28/Server.cpp</span>n<span style="color: #888822;">+++ b/bin/Episode28/Server.cpp</span>n<span style="color: #440088;">@@ -2,8 +2,11 @@</span>n #include &lt;algorithm&gt;n #include &lt;functional&gt;n #include &lt;ctime&gt;n<span style="color: #00b000;">+#include &lt;stdexcept&gt;</span>n #include &quot;Observer.h&quot;n&nbsp;n<span style="color: #00b000;">+using namespace std;</span>n<span style="color: #00b000;">+</span>n Server::Server<span style="">&#40;</span>sockaddr_storage address<span style="">&#41;</span>n : address_<span style="">&#40;</span>address<span style="">&#41;</span>n , server_fd_<span style="">&#40;</span>-<span style="">1</span><span style="">&#41;</span>n<span style="color: #440088;">@@ -15,7 +18,7 @@ Server::Server<span style="">&#40;</span>sockaddr_storage address<span style="">&#41;</span></span>n <span style="">&#125;</span>n elsen <span style="">&#123;</span> /bin /boot /cdrom /dev /etc /home /initrd.img /initrd.img.old /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old all is well */ <span style="">&#125;</span>n<span style="color: #991111;">- if <span style="">&#40;</span>bind<span style="">&#40;</span>server_fd_, <span style="">&#40;</span>const sockaddr*<span style="">&#41;</span>&amp;address_, sizeof<span style="">&#40;</span>address_<span style="">&#41;</span><span style="">&#41;</span> == -1<span style="">&#41;</span></span>n<span style="color: #00b000;">+ if <span style="">&#40;</span>::bind<span style="">&#40;</span>server_fd_, <span style="">&#40;</span>const sockaddr*<span style="">&#41;</span>&amp;address_, sizeof<span style="">&#40;</span>address_<span style="">&#41;</span><span style="">&#41;</span> == -1<span style="">&#41;</span></span>n <span style="">&#123;</span>n throw &quot;Something more eloquent here&quot;;n <span style="">&#125;</span>n<span style="color: #440088;">@@ -132,23 +135,23 @@ void Server::update<span style="">&#40;</span>unsigned int timeout/*in ms*/<span style="">&#41;</span></span>n int highest_fd<span style="">&#40;</span>server_fd_<span style="">&#41;</span>;n fd_set read_fds;n FD_ZERO<span style="">&#40;</span>&amp;read_fds<span style="">&#41;</span>;n<span style="color: #991111;">- std::for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Functor<span style="">&#40;</span>read_fds, &amp;Socket::read_avail_, highest_fd<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Functor<span style="">&#40;</span>read_fds, &amp;Socket::read_avail_, highest_fd<span style="">&#41;</span><span style="">&#41;</span>;</span>n fd_set write_fds;n FD_ZERO<span style="">&#40;</span>&amp;write_fds<span style="">&#41;</span>;n<span style="color: #991111;">- std::for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Functor<span style="">&#40;</span>write_fds, &amp;Socket::write_avail_, highest_fd<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Functor<span style="">&#40;</span>write_fds, &amp;Socket::write_avail_, highest_fd<span style="">&#41;</span><span style="">&#41;</span>;</span>n fd_set exc_fds;n FD_ZERO<span style="">&#40;</span>&amp;exc_fds<span style="">&#41;</span>;n<span style="color: #991111;">- std::for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Functor<span style="">&#40;</span>exc_fds, &amp;Socket::exc_avail_, highest_fd<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Functor<span style="">&#40;</span>exc_fds, &amp;Socket::exc_avail_, highest_fd<span style="">&#41;</span><span style="">&#41;</span>;</span>n timeval to;n to.tv_sec = timeout / <span style="">1000</span>;n to.tv_usec = <span style="">&#40;</span>timeout % <span style="">1000</span><span style="">&#41;</span> 2017-10-14-new-website.md 2017-10-14-new-website.md~ split.sh split.sh~ wp_post_10.txt wp_post_11.txt wp_post_12.txt wp_post_13.txt wp_post_14.txt wp_post_15.txt wp_post_16.txt wp_post_17.txt wp_post_18.txt wp_post_19.txt wp_post_1.yml wp_post_20.txt wp_post_21.txt wp_post_22.txt wp_post_23.txt wp_post_24.txt wp_post_25.txt wp_post_26.txt wp_post_27.txt wp_post_28.txt wp_post_29.txt wp_post_2.txt wp_post_3.txt wp_post_4.txt wp_post_5.txt wp_post_6.txt wp_post_7.txt wp_post_8.txt wp_post_9.txt wp_posts.yml <span style="">1000</span>;n int select_result<span style="">&#40;</span>select<span style="">&#40;</span>highest_fd + <span style="">1</span>, &amp;read_fds, &amp;write_fds, &amp;exc_fds, &amp;to<span style="">&#41;</span><span style="">&#41;</span>;n if <span style="">&#40;</span>select_result &gt; <span style="">0</span><span style="">&#41;</span>n <span style="">&#123;</span>n<span style="color: #991111;">- std::for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Notifier&lt; Predicate&lt; true &gt;, Observers &gt;<span style="">&#40;</span>read_fds, &amp;Socket::read_avail_, observers_, &amp;Observer::onNewConnection<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #991111;">- std::for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Notifier&lt; Predicate&lt;&gt;, Observers &gt;<span style="">&#40;</span>read_fds, &amp;Socket::read_avail_, observers_, &amp;Observer::onDataReady<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #991111;">- std::for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Notifier&lt; Predicate&lt;&gt;, Observers &gt;<span style="">&#40;</span>write_fds, &amp;Socket::write_avail_, observers_, &amp;Observer::onWriteReady<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #991111;">- std::for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Notifier&lt; Predicate&lt;&gt;, Observers &gt;<span style="">&#40;</span>exc_fds, &amp;Socket::exc_avail_, observers_, &amp;Observer::onExceptionalDataReady<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Notifier&lt; Predicate&lt; true &gt;, Observers &gt;<span style="">&#40;</span>read_fds, &amp;Socket::read_avail_, observers_, &amp;Observer::onNewConnection<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Notifier&lt; Predicate&lt;&gt;, Observers &gt;<span style="">&#40;</span>read_fds, &amp;Socket::read_avail_, observers_, &amp;Observer::onDataReady<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Notifier&lt; Predicate&lt;&gt;, Observers &gt;<span style="">&#40;</span>write_fds, &amp;Socket::write_avail_, observers_, &amp;Observer::onWriteReady<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ for_each<span style="">&#40;</span>sockets_.begin<span style="">&#40;</span><span style="">&#41;</span>, sockets_.end<span style="">&#40;</span><span style="">&#41;</span>, Notifier&lt; Predicate&lt;&gt;, Observers &gt;<span style="">&#40;</span>exc_fds, &amp;Socket::exc_avail_, observers_, &amp;Observer::onExceptionalDataReady<span style="">&#41;</span><span style="">&#41;</span>;</span>n <span style="">&#125;</span>n else if <span style="">&#40;</span>select_result &lt; <span style="">0</span><span style="">&#41;</span>n <span style="">&#123;</span>n<span style="color: #440088;">@@ -165,7 +168,7 @@ void Server::attach<span style="">&#40;</span>Observer *observer<span style="">&#41;</span></span>n&nbsp;n void Server::detach<span style="">&#40;</span>Observer *observer<span style="">&#41;</span>n <span style="">&#123;</span>n<span style="color: #991111;">- Observers::iterator where<span style="">&#40;</span>std::find<span style="">&#40;</span>observers_.begin<span style="">&#40;</span><span style="">&#41;</span>, observers_.end<span style="">&#40;</span><span style="">&#41;</span>, observer<span style="">&#41;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ Observers::iterator where<span style="">&#40;</span>find<span style="">&#40;</span>observers_.begin<span style="">&#40;</span><span style="">&#41;</span>, observers_.end<span style="">&#40;</span><span style="">&#41;</span>, observer<span style="">&#41;</span><span style="">&#41;</span>;</span>n if <span style="">&#40;</span>where != observers_.end<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>n <span style="">&#123;</span>n observers_.erase<span style="">&#40;</span>where<span style="">&#41;</span>;n<span style="color: #440088;">@@ -188,6 +191,17 @@ void Server::reject<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span></span>n // don't need to notify in this case - the observer has never seen the new socketn <span style="">&#125;</span>n&nbsp;n<span style="color: #00b000;">+void Server::close<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span></span>n<span style="color: #00b000;">+<span style="">&#123;</span></span>n<span style="color: #00b000;">+ closesocket<span style="">&#40;</span>socket.fd_<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ for <span style="">&#40;</span>Observers::iterator observer<span style="">&#40;</span>observers_.begin<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>; observer != observers_.end<span style="">&#40;</span><span style="">&#41;</span>; ++observer<span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ <span style="">&#40;</span>*observer<span style="">&#41;</span>-&gt;onCloseSocket<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ socket.fd_ = -<span style="">1</span>;</span>n<span style="color: #00b000;">+ // it will be cleaned up on the next round of select</span>n<span style="color: #00b000;">+<span style="">&#125;</span></span>n<span style="color: #00b000;">+</span>n void Server::read<span style="">&#40;</span>Socket &amp;socket, char *buffer, unsigned int *buffer_size<span style="">&#41;</span>n <span style="">&#123;</span>n if <span style="">&#40;</span>socket.read_avail_<span style="">&#41;</span>n<span style="color: #440088;">@@ -195,16 +209,65 @@ void Server::read<span style="">&#40;</span>Socket &amp;socket, char *buffer, unsigned int *buffer_size<span style="">&#41;</span></span>n int recv_result<span style="">&#40;</span>::recv<span style="">&#40;</span>socket.fd_, buffer, *buffer_size, <span style="">0</span><span style="">&#41;</span><span style="">&#41;</span>;n if <span style="">&#40;</span>recv_result == <span style="">0</span><span style="">&#41;</span> // EOFn <span style="">&#123;</span>n<span style="color: #991111;">- closesocket<span style="">&#40;</span>socket.fd_<span style="">&#41;</span>;</span>n<span style="color: #991111;">- for <span style="">&#40;</span>Observers::iterator observer<span style="">&#40;</span>observers_.begin<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span>; observer != observers_.end<span style="">&#40;</span><span style="">&#41;</span>; ++observer<span style="">&#41;</span></span>n<span style="color: #991111;">- <span style="">&#123;</span></span>n<span style="color: #991111;">- <span style="">&#40;</span>*observer<span style="">&#41;</span>-&gt;onCloseSocket<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #991111;">- <span style="">&#125;</span></span>n<span style="color: #991111;">- socket.fd_ = -<span style="">1</span>;</span>n<span style="color: #00b000;">+ close<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n <span style="">&#125;</span>n else if <span style="">&#40;</span>recv_result &lt; <span style="">0</span><span style="">&#41;</span>n <span style="">&#123;</span>n<span style="color: #991111;">- throw &quot;something more eloquent here&quot;;</span>n<span style="color: #00b000;">+ switch <span style="">&#40;</span>WSAGetLastError<span style="">&#40;</span><span style="">&#41;</span><span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ case WSANOTINITIALISED :</span>n<span style="color: #00b000;">+ throw logic_error<span style="">&#40;</span>&quot;A successful WSAStartup call must occur before using this function&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAENETDOWN :</span>n<span style="color: #00b000;">+ close<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ throw NetworkDown<span style="">&#40;</span>&quot;The network subsystem has failed&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAEACCES :</span>n<span style="color: #00b000;">+ close<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ throw WrongAddressType<span style="">&#40;</span>&quot;The requested address is a broadcast address&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAEINTR :</span>n<span style="color: #00b000;">+ // all calls should be non-blocking</span>n<span style="color: #00b000;">+ throw logic_error<span style="">&#40;</span>&quot;A blocking Windows Sockets <span style="">1.1</span> call was canceled through WSACancelBlockingCall&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAEINPROGRESS :</span>n<span style="color: #00b000;">+ // all calls should be non-blocking</span>n<span style="color: #00b000;">+ throw logic_error<span style="">&#40;</span>&quot;A blocking Windows Sockets <span style="">1.1</span> call is in progress, or the service provider is still processing a callback function&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAEFAULT :</span>n<span style="color: #00b000;">+ throw logic_error<span style="">&#40;</span>&quot;The buf parameter is not completely contained in a valid part of the user address space&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAENETRESET :</span>n<span style="color: #00b000;">+ close<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ throw KeepAliveFailed<span style="">&#40;</span>&quot;The connection has been broken due to the keep-alive activity detecting a failure while the operation was in progress&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAENOBUFS :</span>n<span style="color: #00b000;">+ throw bad_alloc<span style="">&#40;</span>&quot;No buffer space is available&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAENOTCONN :</span>n<span style="color: #00b000;">+ close<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ throw SocketNotConnected<span style="">&#40;</span>&quot;The socket is not connected&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAENOTSOCK :</span>n<span style="color: #00b000;">+ throw logic_error<span style="">&#40;</span>&quot;The descriptor is not a socket&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAEOPNOTSUPP :</span>n<span style="color: #00b000;">+ throw logic_error<span style="">&#40;</span>&quot;MSG_OOB was specified, but the socket is not stream-style such as type SOCK_STREAM, OOB data is not supported in the communication domain associated with this socket, or the socket is unidirectional and supports only receive operations&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAESHUTDOWN :</span>n<span style="color: #00b000;">+ throw logic_error<span style="">&#40;</span>&quot;The socket has been shut down; it is not possible to send on a socket after shutdown has been invoked with how set to SD_SEND or SD_BOTH&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAEWOULDBLOCK : // The socket is marked as nonblocking and the requested operation would block.</span>n<span style="color: #00b000;">+ // not really an error</span>n<span style="color: #00b000;">+ *buffer_size = <span style="">0</span>;</span>n<span style="color: #00b000;">+ break;</span>n<span style="color: #00b000;">+ case WSAEMSGSIZE :</span>n<span style="color: #00b000;">+ throw logic_error<span style="">&#40;</span>&quot;The socket is message oriented, and the message is larger than the maximum supported by the underlying transport&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAEHOSTUNREACH :</span>n<span style="color: #00b000;">+ close<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ throw HostUnreachable<span style="">&#40;</span>&quot;The remote host cannot be reached from this host at this time&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAEINVAL :</span>n<span style="color: #00b000;">+ throw logic_error<span style="">&#40;</span>&quot;The socket has not been bound with bind, or an unknown flag was specified, or MSG_OOB was specified for a socket with SO_OOBINLINE enabled&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAECONNABORTED :</span>n<span style="color: #00b000;">+ close<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ throw ConnectionAborted<span style="">&#40;</span>&quot;The virtual circuit was terminated due to a time-out or other failure&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAECONNRESET :</span>n<span style="color: #00b000;">+ close<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ throw ConnectionReset<span style="">&#40;</span>&quot;The virtual circuit was reset by the remote side executing a hard or abortive close. For UDP sockets, the remote host was unable to deliver a previously sent UDP datagram and responded with a \&quot;Port Unreachable\&quot; ICMP packet&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ case WSAETIMEDOUT :</span>n<span style="color: #00b000;">+ close<span style="">&#40;</span>socket<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ throw ConnectionDropped<span style="">&#40;</span>&quot;The connection has been dropped, because of a network failure or because the system on the other end went down without notice&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ default :</span>n<span style="color: #00b000;">+ throw logic_error<span style="">&#40;</span>&quot;Unknown error&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n <span style="">&#125;</span>n elsen <span style="">&#123;</span>ndiff --git a/bin/Episode28/Server.h b/bin/Episode28/Server.hnindex f<span style="color: #440088;">8d1131</span>..fa616e3 <span style="">100644</span>n<span style="color: #888822;">--- a/bin/Episode28/Server.h</span>n<span style="color: #888822;">+++ b/bin/Episode28/Server.h</span>n<span style="color: #440088;">@@ -5,11 +5,33 @@</span>n #include &lt;list&gt;n #include &quot;Socket.h&quot;n #include &quot;config.h&quot;n<span style="color: #00b000;">+#include &quot;exceptions/Exception.h&quot;</span>n&nbsp;n class Observer;n class Servern <span style="">&#123;</span>n public :n<span style="color: #00b000;">+ enum Errors <span style="">&#123;</span></span>n<span style="color: #00b000;">+ wrong_address_type__,</span>n<span style="color: #00b000;">+ network_error__,</span>n<span style="color: #00b000;">+ network_down__,</span>n<span style="color: #00b000;">+ keep_alive_failed__,</span>n<span style="color: #00b000;">+ socket_not_connected__,</span>n<span style="color: #00b000;">+ host_unreachable__,</span>n<span style="color: #00b000;">+ connection_aborted__,</span>n<span style="color: #00b000;">+ connection_reset__,</span>n<span style="color: #00b000;">+ connection_dropped__,</span>n<span style="color: #00b000;">+ <span style="">&#125;</span>;</span>n<span style="color: #00b000;">+ typedef Vlinder::Exceptions::Exception&lt; std::runtime_error, Errors, wrong_address_type__ &gt; WrongAddressType; // user error or logic error, </span>n<span style="color: #00b000;">+ typedef Vlinder::Exceptions::Exception&lt; std::runtime_error, Errors, network_error__ &gt; NetworkError;</span>n<span style="color: #00b000;">+ typedef Vlinder::Exceptions::Exception&lt; NetworkError, Errors, network_down__ &gt; NetworkDown;</span>n<span style="color: #00b000;">+ typedef Vlinder::Exceptions::Exception&lt; NetworkError, Errors, keep_alive_failed__ &gt; KeepAliveFailed; </span>n<span style="color: #00b000;">+ typedef Vlinder::Exceptions::Exception&lt; NetworkError, Errors, socket_not_connected__ &gt; SocketNotConnected;</span>n<span style="color: #00b000;">+ typedef Vlinder::Exceptions::Exception&lt; NetworkError, Errors, host_unreachable__ &gt; HostUnreachable;</span>n<span style="color: #00b000;">+ typedef Vlinder::Exceptions::Exception&lt; NetworkError, Errors, connection_aborted__ &gt; ConnectionAborted;</span>n<span style="color: #00b000;">+ typedef Vlinder::Exceptions::Exception&lt; NetworkError, Errors, connection_reset__ &gt; ConnectionReset;</span>n<span style="color: #00b000;">+ typedef Vlinder::Exceptions::Exception&lt; NetworkError, Errors, connection_reset__ &gt; ConnectionDropped;</span>n<span style="color: #00b000;">+</span>n Server<span style="">&#40;</span>sockaddr_storage address<span style="">&#41;</span>;n ~Server<span style="">&#40;</span><span style="">&#41;</span>;n&nbsp;n<span style="color: #440088;">@@ -20,6 +42,7 @@ public :</span>n&nbsp;n Socket&amp; accept<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;n void reject<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;n<span style="color: #00b000;">+ void close<span style="">&#40;</span>Socket &amp;socket<span style="">&#41;</span>;</span>n&nbsp;n void read<span style="">&#40;</span>Socket &amp;socket, char *buffer, unsigned int *buffer_size<span style="">&#41;</span>;n void write<span style="">&#40;</span>Socket &amp;socket, const char *buffer, unsigned int *buffer_size<span style="">&#41;</span>;ndiff --git a/lib/core/Attributes.cpp b/lib/core/Attributes.cppnindex dbfafa7..1fee546 <span style="">100644</span>n<span style="color: #888822;">--- a/lib/core/Attributes.cpp</span>n<span style="color: #888822;">+++ b/lib/core/Attributes.cpp</span>n<span style="color: #440088;">@@ -2,44 +2,44 @@</span>n #include &lt;new&gt;n #include &lt;stdexcept&gt;n&nbsp;n<span style="color: #991111;">-namespace Vlinder <span style="">&#123;</span> namespace Chausette <span style="">&#123;</span> namespace Core <span style="">&#123;</span></span>n<span style="color: #991111;">- /*static */unsigned int Attributes::next_id__<span style="">&#40;</span><span style="">0</span><span style="">&#41;</span>;</span>n<span style="color: #991111;">-</span>n<span style="color: #991111;">- /*static */unsigned int Attributes::alloc<span style="">&#40;</span><span style="">&#41;</span></span>n<span style="color: #991111;">- <span style="">&#123;</span></span>n<span style="color: #991111;">- /bin /boot /cdrom /dev /etc /home /initrd.img /initrd.img.old /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old note that this is not thread-safe! */</span>n<span style="color: #991111;">- if <span style="">&#40;</span>next_id__ == id_max__<span style="">&#41;</span></span>n<span style="color: #991111;">- <span style="">&#123;</span></span>n<span style="color: #991111;">- throw std::bad_alloc<span style="">&#40;</span><span style="">&#41;</span>;</span>n<span style="color: #991111;">- <span style="">&#125;</span></span>n<span style="color: #991111;">- else</span>n<span style="color: #991111;">- <span style="">&#123;</span></span>n<span style="color: #991111;">- return next_id__++;</span>n<span style="color: #991111;">- <span style="">&#125;</span></span>n<span style="color: #991111;">- <span style="">&#125;</span></span>n<span style="color: #991111;">-</span>n<span style="color: #991111;">- boost::any&amp; Attributes::get<span style="">&#40;</span>unsigned int index<span style="">&#41;</span></span>n<span style="color: #991111;">- <span style="">&#123;</span></span>n<span style="color: #991111;">- if <span style="">&#40;</span>index &lt; next_id__<span style="">&#41;</span></span>n<span style="color: #991111;">- <span style="">&#123;</span></span>n<span style="color: #991111;">- return attributes_<span style="">&#91;</span>index<span style="">&#93;</span>;</span>n<span style="color: #991111;">- <span style="">&#125;</span></span>n<span style="color: #991111;">- else</span>n<span style="color: #991111;">- <span style="">&#123;</span></span>n<span style="color: #991111;">- throw std::logic_error<span style="">&#40;</span>&quot;Trying to access unallocated attribute&quot;<span style="">&#41;</span>;</span>n<span style="color: #991111;">- <span style="">&#125;</span></span>n<span style="color: #991111;">- <span style="">&#125;</span></span>n<span style="color: #991111;">-</span>n<span style="color: #991111;">- const boost::any&amp; Attributes::get<span style="">&#40;</span>unsigned int index<span style="">&#41;</span> const</span>n<span style="color: #991111;">- <span style="">&#123;</span></span>n<span style="color: #991111;">- if <span style="">&#40;</span>index &lt; next_id__<span style="">&#41;</span></span>n<span style="color: #991111;">- <span style="">&#123;</span></span>n<span style="color: #991111;">- return attributes_<span style="">&#91;</span>index<span style="">&#93;</span>;</span>n<span style="color: #991111;">- <span style="">&#125;</span></span>n<span style="color: #991111;">- else</span>n<span style="color: #991111;">- <span style="">&#123;</span></span>n<span style="color: #991111;">- throw std::logic_error<span style="">&#40;</span>&quot;Trying to access unallocated attribute&quot;<span style="">&#41;</span>;</span>n<span style="color: #991111;">- <span style="">&#125;</span></span>n<span style="color: #991111;">- <span style="">&#125;</span></span>n<span style="color: #00b000;">+namespace Vlinder <span style="">&#123;</span> namespace Chausette <span style="">&#123;</span> namespace Core <span style="">&#123;</span></span>n<span style="color: #00b000;">+ /*static */unsigned int Attributes::next_id__<span style="">&#40;</span><span style="">0</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+</span>n<span style="color: #00b000;">+ /*static */unsigned int Attributes::alloc<span style="">&#40;</span><span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ /bin /boot /cdrom /dev /etc /home /initrd.img /initrd.img.old /lib /lib32 /lib64 /libx32 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old note that this is not thread-safe! */</span>n<span style="color: #00b000;">+ if <span style="">&#40;</span>next_id__ == id_max__<span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ throw std::bad_alloc<span style="">&#40;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ else</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ return next_id__++;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+</span>n<span style="color: #00b000;">+ boost::any&amp; Attributes::get<span style="">&#40;</span>unsigned int index<span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ if <span style="">&#40;</span>index &lt; next_id__<span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ return attributes_<span style="">&#91;</span>index<span style="">&#93;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ else</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ throw std::logic_error<span style="">&#40;</span>&quot;Trying to access unallocated attribute&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+</span>n<span style="color: #00b000;">+ const boost::any&amp; Attributes::get<span style="">&#40;</span>unsigned int index<span style="">&#41;</span> const</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ if <span style="">&#40;</span>index &lt; next_id__<span style="">&#41;</span></span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ return attributes_<span style="">&#91;</span>index<span style="">&#93;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ else</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ throw std::logic_error<span style="">&#40;</span>&quot;Trying to access unallocated attribute&quot;<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n<span style="color: #00b000;">+ <span style="">&#125;</span></span>n <span style="">&#125;</span><span style="">&#125;</span><span style="">&#125;</span>n&nbsp;ndiff --git a/lib/core/Attributes.h b/lib/core/Attributes.hnindex 288f0f7..f15ace2 <span style="">100644</span>n<span style="color: #888822;">--- a/lib/core/Attributes.h</span>n<span style="color: #888822;">+++ b/lib/core/Attributes.h</span>n<span style="color: #440088;">@@ -1,24 +1,24 @@</span>n #ifndef vlinder_chausette_core_attributes_hn #define vlinder_chausette_core_attributes_hn&nbsp;n<span style="color: #991111;">-#include &quot;Details/prologue.h&quot;</span>n<span style="color: #991111;">-#include &lt;boost/any.hpp&gt;</span>n<span style="color: #991111;">-</span>n<span style="color: #991111;">-namespace Vlinder <span style="">&#123;</span> namespace Chausette <span style="">&#123;</span> namespace Core <span style="">&#123;</span></span>n<span style="color: #991111;">- class VLINDER_CHAUSETTE_CORE_API Attributes</span>n<span style="color: #991111;">- <span style="">&#123;</span></span>n<span style="color: #991111;">- public :</span>n<span style="color: #991111;">- static unsigned int alloc<span style="">&#40;</span><span style="">&#41;</span>;</span>n<span style="color: #991111;">-</span>n<span style="color: #991111;">- boost::any&amp; get<span style="">&#40;</span>unsigned int index<span style="">&#41;</span>;</span>n<span style="color: #991111;">- const boost::any&amp; get<span style="">&#40;</span>unsigned int index<span style="">&#41;</span> const;</span>n<span style="color: #991111;">-</span>n<span style="color: #991111;">- private :</span>n<span style="color: #991111;">- static const unsigned int id_max__ = <span style="">48</span>;</span>n<span style="color: #991111;">-</span>n<span style="color: #991111;">- boost::any attributes_<span style="">&#91;</span>id_max__<span style="">&#93;</span>;</span>n<span style="color: #991111;">- static unsigned int next_id__;</span>n<span style="color: #991111;">- <span style="">&#125;</span>;</span>n<span style="color: #00b000;">+#include &quot;Details/prologue.h&quot;</span>n<span style="color: #00b000;">+#include &lt;boost/any.hpp&gt;</span>n<span style="color: #00b000;">+</span>n<span style="color: #00b000;">+namespace Vlinder <span style="">&#123;</span> namespace Chausette <span style="">&#123;</span> namespace Core <span style="">&#123;</span></span>n<span style="color: #00b000;">+ class VLINDER_CHAUSETTE_CORE_API Attributes</span>n<span style="color: #00b000;">+ <span style="">&#123;</span></span>n<span style="color: #00b000;">+ public :</span>n<span style="color: #00b000;">+ static unsigned int alloc<span style="">&#40;</span><span style="">&#41;</span>;</span>n<span style="color: #00b000;">+</span>n<span style="color: #00b000;">+ boost::any&amp; get<span style="">&#40;</span>unsigned int index<span style="">&#41;</span>;</span>n<span style="color: #00b000;">+ const boost::any&amp; get<span style="">&#40;</span>unsigned int index<span style="">&#41;</span> const;</span>n<span style="color: #00b000;">+</span>n<span style="color: #00b000;">+ private :</span>n<span style="color: #00b000;">+ static const unsigned int id_max__ = <span style="">48</span>;</span>n<span style="color: #00b000;">+</span>n<span style="color: #00b000;">+ boost::any attributes_<span style="">&#91;</span>id_max__<span style="">&#93;</span>;</span>n<span style="color: #00b000;">+ static unsigned int next_id__;</span>n<span style="color: #00b000;">+ <span style="">&#125;</span>;</span>n <span style="">&#125;</span><span style="">&#125;</span><span style="">&#125;</span>n&nbsp;n #endif</pre></td></tr></table></div>nn<p>Most of the code in <code>onDataReady</code> speaks for itself: if a given socket doesn&#8217;t have an associated socket, the data from the socket is read and thrown away. If it does have an associated socket, it will have the remote address of that socket in its attributes, so we can find it (and call it its &#8220;partner&#8221; in the code). We then take the associated vector from the partner socket and use it as a buffer, into which we read all of our data. <code>Server::write</code> is already nice enough to not try to write on a socket that&#8217;s not known to be ready for writing, so we can just call it with the partner socket and its buffer.</p>n<p>Associating sockets with each other is done in the <code>pairSocket</code> method, which simply checks if there&#8217;s another un-paired socket. If so, the two are paired. If not, the to-be-paired socket is put on hold for the next to-be-paired socket.</p>n<p>This means the proxying we do here is more or less random: sockets are paired with new sockets if they lose their current partner and another socket is waiting, if they connect to the server and another socket is waiting to be paired, or if they were waiting for a partner and another socket loses theirs, or connects to the server.</p>n<p>The <code>unpairSocket</code> method takes care of leaving sockets and calls <code>pairSocket</code> if the leaving socket wasn&#8217;t un-paired in the first place.</p>n<p>Perhaps you&#8217;ve also noticed that I&#8217;ve added a lot of error handling code &#8211; treating all of the possible error codes. That&#8217;s because we now need to handle those errors correctly, as we want to keep the server alive if a client disconnects. The code isn&#8217;t perfect yet, of course, but it may be worth taking a look at, to get a feel of how error handling will work in this setting.</p>n<h2>Specializing the map</h2>n<p>The standard map can be specialized to better suit our needs. In this case, I&#8217;ve added a comparator to the map, to allow us to compare instances of <code>sockaddr_storage</code> and use it as a key in the map. Note that, because this is a template specialization of the map class, the comparator&#8217;s type is now a part of the map&#8217;s type. This means it&#8217;s also part of any of the nested types of the map, such as its iterator types.</p>n<p>Without this specialization, it would not have been possible to use <code>sockaddr_storage</code> as a key in the map, because there&#8217;s no less-than operator for the <code>sockaddr_storage</code> type.</p>nn"
post_title: "Chausette: Starting to proxy"
post_excerpt: "In the previous installment, we started to echo the data we received back to where it came from. That&rsquo;s all fine and dandy, but it isn&rsquo;t really all that interesting. In this installment, we will set up a pair of &hellip; <a href="http://rlc.vlinder.ca/blog/2011/09/chausette-starting-to-proxy/">Continue reading <span>&rarr;</span></a>"
post_status: "publish"
comment_status: "open"
ping_status: "open"
post_password: ""
post_name: "chausette-starting-to-proxy"
to_ping: ""
pinged: ""
post_modified: "2011-09-25 17:01:51"
post_modified_gmt: "2011-09-25 21:01:51"
post_content_filtered: ""
post_parent: 0
guid: "http://rlc.vlinder.ca/?p=1677"
menu_order: 0
post_type: "post"
post_mime_type: ""
comment_count: 0
