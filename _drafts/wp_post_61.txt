ID: 72
post_author: 1
post_date: "2013-04-03 08:54:26"
post_date_gmt: "2013-04-03 12:54:26"
post_content: "Serializing is the act of taking a chink of data an converting it to something that can be communicated -- i.e. some format or other that someone or something else can parse and understand. You do it all the time when you write, or even when you talk: you serialize your thoughts as words that you then serialize as either characters on paper (virtual or dead tree) or as sound.nnParsing is the opposite process of serializing -- also called deserializing.nnAs with words on paper, there is some inaccuracy in serializing when it's floating point numbers being serialized in human-readable form. That is because a computer uses a binary system for counting while a human uses a decimal system. For integers, that doesn't matter because any integer value that can be represented in, say, 32 bits can also be represented in 10 decimal characters and the conversion is fairly straight-forward.nnThe same is not true of floating point values: due to the way floats are implemented, there are some numbers that simply cannot be accurately represented in a <code>float</code> (the same goes for <code>double</code>s, of course).nnFloating point numbers consist of three parts: the sign (plus or minus), the mantissa and the exponent. The value is [latex]V=S*M*10^E[/latex] in which [latex]S[/latex] is 1 for positive and -1 for negative, [latex]M[/latex] the mantissa and [latex]E[/latex] the exponent. For example, in the case of -12.345 [latex]S = -1[/latex], [latex]E = 1[/latex] and [latex]M = 1.2345[/latex].nnUnderstanding this, we can implement a function to split a floating-point value into its constituent parts: <pre lang="cpp">void split_float(n int *signn , double *mantissan , int *exponentn , double valuen )n{n pre_condition(sign && mantissa && exponent);n if (value < 0)n {n *sign = -1;n value = -value;n }n elsen {n *sign = 1;n }n *exponent = (int)log10(value);n *mantissa = value / pow(10, *exponent);n}</pre>nIn this code, the first thing we take care of is the sign. Note that we also change the sign of <code>value</code> in that case, because <code>log10</code> of a negative number doesn't work.nnTo get the exponent, we call <code>log10</code> on the (now positive) value and round it off. Whether casting to <code>int</code> rounds up or down depends on the machine."
post_title: "Serializing floats"
post_excerpt: ""
post_status: "inherit"
comment_status: "open"
ping_status: "open"
post_password: ""
post_name: "62-revision-10"
to_ping: ""
pinged: ""
post_modified: "2013-04-03 08:54:26"
post_modified_gmt: "2013-04-03 12:54:26"
post_content_filtered: ""
post_parent: 62
guid: "http://cpp4theselftaught.com/2013/04/62-revision-10/"
menu_order: 0
post_type: "revision"
post_mime_type: ""
comment_count: 0
